name: Convert proxy-list.txt

on:
  schedule:
    - cron: '0 2 * * *' # 每天UTC时间2点自动运行
  workflow_dispatch: # 允许手动触发

permissions:
  actions: write
  contents: write  

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          repository: sooyaaabo/Loon
          path: Loon

      - name: Download proxy-list.txt
        run: |
          curl -sSL -o proxy-list.txt https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt

      - name: Convert to Loon format
        run: |
          # 创建目标目录 Rule
          mkdir -p Loon/Rule
          # 写入规则头部
          echo '# 原始链接：https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt' > Loon/Rule/Proxy-List.list
          # 读取每一行
          while read -r line; do
            # 忽略空行和注释
            if [[ -n "$line" && ! "$line" =~ ^# ]]; then
              # 处理 "full:" 开头的规则
              if [[ "$line" =~ ^full: ]]; then
                domain="${line#full:}"
                # 写入 DOMAIN 格式
                echo "DOMAIN, $domain" >> Loon/Rule/Proxy-List.list
              # 处理类似 "regexp:" 的规则
              elif [[ "$line" =~ ^regexp: ]]; then
                regex="${line#regexp:}"
                # 确保正则表达式格式正确
                echo "URL-REGEX, \"$regex\"" >> Loon/Rule/Proxy-List.list
              # 处理一般域名，转换为 "DOMAIN-SUFFIX"
              else
                echo "DOMAIN-SUFFIX, $line" >> Loon/Rule/Proxy-List.list
              fi
            fi
          done < proxy-list.txt

      - name: Commit and push changes
        run: |
          cd Loon
          if [[ -n $(git status -s) ]]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add .
            git commit -m "Proxy-List Update $(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M')"
            git push origin HEAD
          else
            echo "No changes to commit."
          fi
          
      - name: 清理Workflow
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          retain_days: 0
          keep_minimum_runs: 5
